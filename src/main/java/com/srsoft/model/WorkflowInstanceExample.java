package com.srsoft.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WorkflowInstanceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public WorkflowInstanceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andWorkflowidIsNull() {
            addCriterion("workflowId is null");
            return (Criteria) this;
        }

        public Criteria andWorkflowidIsNotNull() {
            addCriterion("workflowId is not null");
            return (Criteria) this;
        }

        public Criteria andWorkflowidEqualTo(Integer value) {
            addCriterion("workflowId =", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidNotEqualTo(Integer value) {
            addCriterion("workflowId <>", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidGreaterThan(Integer value) {
            addCriterion("workflowId >", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidGreaterThanOrEqualTo(Integer value) {
            addCriterion("workflowId >=", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidLessThan(Integer value) {
            addCriterion("workflowId <", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidLessThanOrEqualTo(Integer value) {
            addCriterion("workflowId <=", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidIn(List<Integer> values) {
            addCriterion("workflowId in", values, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidNotIn(List<Integer> values) {
            addCriterion("workflowId not in", values, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidBetween(Integer value1, Integer value2) {
            addCriterion("workflowId between", value1, value2, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidNotBetween(Integer value1, Integer value2) {
            addCriterion("workflowId not between", value1, value2, "workflowid");
            return (Criteria) this;
        }

        public Criteria andSenderIsNull() {
            addCriterion("sender is null");
            return (Criteria) this;
        }

        public Criteria andSenderIsNotNull() {
            addCriterion("sender is not null");
            return (Criteria) this;
        }

        public Criteria andSenderEqualTo(Integer value) {
            addCriterion("sender =", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderNotEqualTo(Integer value) {
            addCriterion("sender <>", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderGreaterThan(Integer value) {
            addCriterion("sender >", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderGreaterThanOrEqualTo(Integer value) {
            addCriterion("sender >=", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderLessThan(Integer value) {
            addCriterion("sender <", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderLessThanOrEqualTo(Integer value) {
            addCriterion("sender <=", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderIn(List<Integer> values) {
            addCriterion("sender in", values, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderNotIn(List<Integer> values) {
            addCriterion("sender not in", values, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderBetween(Integer value1, Integer value2) {
            addCriterion("sender between", value1, value2, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderNotBetween(Integer value1, Integer value2) {
            addCriterion("sender not between", value1, value2, "sender");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createTime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNull() {
            addCriterion("updateTime is null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNotNull() {
            addCriterion("updateTime is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeEqualTo(Date value) {
            addCriterion("updateTime =", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotEqualTo(Date value) {
            addCriterion("updateTime <>", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThan(Date value) {
            addCriterion("updateTime >", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("updateTime >=", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThan(Date value) {
            addCriterion("updateTime <", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThanOrEqualTo(Date value) {
            addCriterion("updateTime <=", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIn(List<Date> values) {
            addCriterion("updateTime in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotIn(List<Date> values) {
            addCriterion("updateTime not in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeBetween(Date value1, Date value2) {
            addCriterion("updateTime between", value1, value2, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotBetween(Date value1, Date value2) {
            addCriterion("updateTime not between", value1, value2, "updatetime");
            return (Criteria) this;
        }

        public Criteria andAttachmentidIsNull() {
            addCriterion("attachmentId is null");
            return (Criteria) this;
        }

        public Criteria andAttachmentidIsNotNull() {
            addCriterion("attachmentId is not null");
            return (Criteria) this;
        }

        public Criteria andAttachmentidEqualTo(Integer value) {
            addCriterion("attachmentId =", value, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andAttachmentidNotEqualTo(Integer value) {
            addCriterion("attachmentId <>", value, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andAttachmentidGreaterThan(Integer value) {
            addCriterion("attachmentId >", value, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andAttachmentidGreaterThanOrEqualTo(Integer value) {
            addCriterion("attachmentId >=", value, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andAttachmentidLessThan(Integer value) {
            addCriterion("attachmentId <", value, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andAttachmentidLessThanOrEqualTo(Integer value) {
            addCriterion("attachmentId <=", value, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andAttachmentidIn(List<Integer> values) {
            addCriterion("attachmentId in", values, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andAttachmentidNotIn(List<Integer> values) {
            addCriterion("attachmentId not in", values, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andAttachmentidBetween(Integer value1, Integer value2) {
            addCriterion("attachmentId between", value1, value2, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andAttachmentidNotBetween(Integer value1, Integer value2) {
            addCriterion("attachmentId not between", value1, value2, "attachmentid");
            return (Criteria) this;
        }

        public Criteria andActivenodeIsNull() {
            addCriterion("activeNode is null");
            return (Criteria) this;
        }

        public Criteria andActivenodeIsNotNull() {
            addCriterion("activeNode is not null");
            return (Criteria) this;
        }

        public Criteria andActivenodeEqualTo(Integer value) {
            addCriterion("activeNode =", value, "activenode");
            return (Criteria) this;
        }

        public Criteria andActivenodeNotEqualTo(Integer value) {
            addCriterion("activeNode <>", value, "activenode");
            return (Criteria) this;
        }

        public Criteria andActivenodeGreaterThan(Integer value) {
            addCriterion("activeNode >", value, "activenode");
            return (Criteria) this;
        }

        public Criteria andActivenodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("activeNode >=", value, "activenode");
            return (Criteria) this;
        }

        public Criteria andActivenodeLessThan(Integer value) {
            addCriterion("activeNode <", value, "activenode");
            return (Criteria) this;
        }

        public Criteria andActivenodeLessThanOrEqualTo(Integer value) {
            addCriterion("activeNode <=", value, "activenode");
            return (Criteria) this;
        }

        public Criteria andActivenodeIn(List<Integer> values) {
            addCriterion("activeNode in", values, "activenode");
            return (Criteria) this;
        }

        public Criteria andActivenodeNotIn(List<Integer> values) {
            addCriterion("activeNode not in", values, "activenode");
            return (Criteria) this;
        }

        public Criteria andActivenodeBetween(Integer value1, Integer value2) {
            addCriterion("activeNode between", value1, value2, "activenode");
            return (Criteria) this;
        }

        public Criteria andActivenodeNotBetween(Integer value1, Integer value2) {
            addCriterion("activeNode not between", value1, value2, "activenode");
            return (Criteria) this;
        }

        public Criteria andCanbeeditIsNull() {
            addCriterion("canbeEdit is null");
            return (Criteria) this;
        }

        public Criteria andCanbeeditIsNotNull() {
            addCriterion("canbeEdit is not null");
            return (Criteria) this;
        }

        public Criteria andCanbeeditEqualTo(Integer value) {
            addCriterion("canbeEdit =", value, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andCanbeeditNotEqualTo(Integer value) {
            addCriterion("canbeEdit <>", value, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andCanbeeditGreaterThan(Integer value) {
            addCriterion("canbeEdit >", value, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andCanbeeditGreaterThanOrEqualTo(Integer value) {
            addCriterion("canbeEdit >=", value, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andCanbeeditLessThan(Integer value) {
            addCriterion("canbeEdit <", value, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andCanbeeditLessThanOrEqualTo(Integer value) {
            addCriterion("canbeEdit <=", value, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andCanbeeditIn(List<Integer> values) {
            addCriterion("canbeEdit in", values, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andCanbeeditNotIn(List<Integer> values) {
            addCriterion("canbeEdit not in", values, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andCanbeeditBetween(Integer value1, Integer value2) {
            addCriterion("canbeEdit between", value1, value2, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andCanbeeditNotBetween(Integer value1, Integer value2) {
            addCriterion("canbeEdit not between", value1, value2, "canbeedit");
            return (Criteria) this;
        }

        public Criteria andSummaryIsNull() {
            addCriterion("summary is null");
            return (Criteria) this;
        }

        public Criteria andSummaryIsNotNull() {
            addCriterion("summary is not null");
            return (Criteria) this;
        }

        public Criteria andSummaryEqualTo(String value) {
            addCriterion("summary =", value, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryNotEqualTo(String value) {
            addCriterion("summary <>", value, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryGreaterThan(String value) {
            addCriterion("summary >", value, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryGreaterThanOrEqualTo(String value) {
            addCriterion("summary >=", value, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryLessThan(String value) {
            addCriterion("summary <", value, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryLessThanOrEqualTo(String value) {
            addCriterion("summary <=", value, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryLike(String value) {
            addCriterion("summary like", value, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryNotLike(String value) {
            addCriterion("summary not like", value, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryIn(List<String> values) {
            addCriterion("summary in", values, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryNotIn(List<String> values) {
            addCriterion("summary not in", values, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryBetween(String value1, String value2) {
            addCriterion("summary between", value1, value2, "summary");
            return (Criteria) this;
        }

        public Criteria andSummaryNotBetween(String value1, String value2) {
            addCriterion("summary not between", value1, value2, "summary");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflowInstance
     *
     * @mbggenerated do_not_delete_during_merge Sat Jul 02 15:40:08 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflowInstance
     *
     * @mbggenerated Sat Jul 02 15:40:08 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}