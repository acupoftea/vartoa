package com.srsoft.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WorkflowLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public WorkflowLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceIsNull() {
            addCriterion("workflowInstance is null");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceIsNotNull() {
            addCriterion("workflowInstance is not null");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceEqualTo(Integer value) {
            addCriterion("workflowInstance =", value, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceNotEqualTo(Integer value) {
            addCriterion("workflowInstance <>", value, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceGreaterThan(Integer value) {
            addCriterion("workflowInstance >", value, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceGreaterThanOrEqualTo(Integer value) {
            addCriterion("workflowInstance >=", value, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceLessThan(Integer value) {
            addCriterion("workflowInstance <", value, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceLessThanOrEqualTo(Integer value) {
            addCriterion("workflowInstance <=", value, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceIn(List<Integer> values) {
            addCriterion("workflowInstance in", values, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceNotIn(List<Integer> values) {
            addCriterion("workflowInstance not in", values, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceBetween(Integer value1, Integer value2) {
            addCriterion("workflowInstance between", value1, value2, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andWorkflowinstanceNotBetween(Integer value1, Integer value2) {
            addCriterion("workflowInstance not between", value1, value2, "workflowinstance");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNull() {
            addCriterion("operator is null");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNotNull() {
            addCriterion("operator is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorEqualTo(Integer value) {
            addCriterion("operator =", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotEqualTo(Integer value) {
            addCriterion("operator <>", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThan(Integer value) {
            addCriterion("operator >", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThanOrEqualTo(Integer value) {
            addCriterion("operator >=", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorLessThan(Integer value) {
            addCriterion("operator <", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorLessThanOrEqualTo(Integer value) {
            addCriterion("operator <=", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorIn(List<Integer> values) {
            addCriterion("operator in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotIn(List<Integer> values) {
            addCriterion("operator not in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorBetween(Integer value1, Integer value2) {
            addCriterion("operator between", value1, value2, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotBetween(Integer value1, Integer value2) {
            addCriterion("operator not between", value1, value2, "operator");
            return (Criteria) this;
        }

        public Criteria andActionIsNull() {
            addCriterion("action is null");
            return (Criteria) this;
        }

        public Criteria andActionIsNotNull() {
            addCriterion("action is not null");
            return (Criteria) this;
        }

        public Criteria andActionEqualTo(String value) {
            addCriterion("action =", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotEqualTo(String value) {
            addCriterion("action <>", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionGreaterThan(String value) {
            addCriterion("action >", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionGreaterThanOrEqualTo(String value) {
            addCriterion("action >=", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionLessThan(String value) {
            addCriterion("action <", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionLessThanOrEqualTo(String value) {
            addCriterion("action <=", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionLike(String value) {
            addCriterion("action like", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotLike(String value) {
            addCriterion("action not like", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionIn(List<String> values) {
            addCriterion("action in", values, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotIn(List<String> values) {
            addCriterion("action not in", values, "action");
            return (Criteria) this;
        }

        public Criteria andActionBetween(String value1, String value2) {
            addCriterion("action between", value1, value2, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotBetween(String value1, String value2) {
            addCriterion("action not between", value1, value2, "action");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createTime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidIsNull() {
            addCriterion("workflowNodeId is null");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidIsNotNull() {
            addCriterion("workflowNodeId is not null");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidEqualTo(Integer value) {
            addCriterion("workflowNodeId =", value, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidNotEqualTo(Integer value) {
            addCriterion("workflowNodeId <>", value, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidGreaterThan(Integer value) {
            addCriterion("workflowNodeId >", value, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("workflowNodeId >=", value, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidLessThan(Integer value) {
            addCriterion("workflowNodeId <", value, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidLessThanOrEqualTo(Integer value) {
            addCriterion("workflowNodeId <=", value, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidIn(List<Integer> values) {
            addCriterion("workflowNodeId in", values, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidNotIn(List<Integer> values) {
            addCriterion("workflowNodeId not in", values, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidBetween(Integer value1, Integer value2) {
            addCriterion("workflowNodeId between", value1, value2, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andWorkflownodeidNotBetween(Integer value1, Integer value2) {
            addCriterion("workflowNodeId not between", value1, value2, "workflownodeid");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andIsforwardIsNull() {
            addCriterion("isForward is null");
            return (Criteria) this;
        }

        public Criteria andIsforwardIsNotNull() {
            addCriterion("isForward is not null");
            return (Criteria) this;
        }

        public Criteria andIsforwardEqualTo(Integer value) {
            addCriterion("isForward =", value, "isforward");
            return (Criteria) this;
        }

        public Criteria andIsforwardNotEqualTo(Integer value) {
            addCriterion("isForward <>", value, "isforward");
            return (Criteria) this;
        }

        public Criteria andIsforwardGreaterThan(Integer value) {
            addCriterion("isForward >", value, "isforward");
            return (Criteria) this;
        }

        public Criteria andIsforwardGreaterThanOrEqualTo(Integer value) {
            addCriterion("isForward >=", value, "isforward");
            return (Criteria) this;
        }

        public Criteria andIsforwardLessThan(Integer value) {
            addCriterion("isForward <", value, "isforward");
            return (Criteria) this;
        }

        public Criteria andIsforwardLessThanOrEqualTo(Integer value) {
            addCriterion("isForward <=", value, "isforward");
            return (Criteria) this;
        }

        public Criteria andIsforwardIn(List<Integer> values) {
            addCriterion("isForward in", values, "isforward");
            return (Criteria) this;
        }

        public Criteria andIsforwardNotIn(List<Integer> values) {
            addCriterion("isForward not in", values, "isforward");
            return (Criteria) this;
        }

        public Criteria andIsforwardBetween(Integer value1, Integer value2) {
            addCriterion("isForward between", value1, value2, "isforward");
            return (Criteria) this;
        }

        public Criteria andIsforwardNotBetween(Integer value1, Integer value2) {
            addCriterion("isForward not between", value1, value2, "isforward");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflowLog
     *
     * @mbggenerated do_not_delete_during_merge Sun Jul 03 12:46:11 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflowLog
     *
     * @mbggenerated Sun Jul 03 12:46:11 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}