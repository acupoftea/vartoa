package com.srsoft.model;

import java.util.ArrayList;
import java.util.List;

public class WorkflowNodeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public WorkflowNodeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andWorkflowidIsNull() {
            addCriterion("workflowId is null");
            return (Criteria) this;
        }

        public Criteria andWorkflowidIsNotNull() {
            addCriterion("workflowId is not null");
            return (Criteria) this;
        }

        public Criteria andWorkflowidEqualTo(Integer value) {
            addCriterion("workflowId =", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidNotEqualTo(Integer value) {
            addCriterion("workflowId <>", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidGreaterThan(Integer value) {
            addCriterion("workflowId >", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidGreaterThanOrEqualTo(Integer value) {
            addCriterion("workflowId >=", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidLessThan(Integer value) {
            addCriterion("workflowId <", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidLessThanOrEqualTo(Integer value) {
            addCriterion("workflowId <=", value, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidIn(List<Integer> values) {
            addCriterion("workflowId in", values, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidNotIn(List<Integer> values) {
            addCriterion("workflowId not in", values, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidBetween(Integer value1, Integer value2) {
            addCriterion("workflowId between", value1, value2, "workflowid");
            return (Criteria) this;
        }

        public Criteria andWorkflowidNotBetween(Integer value1, Integer value2) {
            addCriterion("workflowId not between", value1, value2, "workflowid");
            return (Criteria) this;
        }

        public Criteria andNodenameIsNull() {
            addCriterion("nodeName is null");
            return (Criteria) this;
        }

        public Criteria andNodenameIsNotNull() {
            addCriterion("nodeName is not null");
            return (Criteria) this;
        }

        public Criteria andNodenameEqualTo(String value) {
            addCriterion("nodeName =", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameNotEqualTo(String value) {
            addCriterion("nodeName <>", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameGreaterThan(String value) {
            addCriterion("nodeName >", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameGreaterThanOrEqualTo(String value) {
            addCriterion("nodeName >=", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameLessThan(String value) {
            addCriterion("nodeName <", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameLessThanOrEqualTo(String value) {
            addCriterion("nodeName <=", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameLike(String value) {
            addCriterion("nodeName like", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameNotLike(String value) {
            addCriterion("nodeName not like", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameIn(List<String> values) {
            addCriterion("nodeName in", values, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameNotIn(List<String> values) {
            addCriterion("nodeName not in", values, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameBetween(String value1, String value2) {
            addCriterion("nodeName between", value1, value2, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameNotBetween(String value1, String value2) {
            addCriterion("nodeName not between", value1, value2, "nodename");
            return (Criteria) this;
        }

        public Criteria andPrelinkIsNull() {
            addCriterion("preLink is null");
            return (Criteria) this;
        }

        public Criteria andPrelinkIsNotNull() {
            addCriterion("preLink is not null");
            return (Criteria) this;
        }

        public Criteria andPrelinkEqualTo(Integer value) {
            addCriterion("preLink =", value, "prelink");
            return (Criteria) this;
        }

        public Criteria andPrelinkNotEqualTo(Integer value) {
            addCriterion("preLink <>", value, "prelink");
            return (Criteria) this;
        }

        public Criteria andPrelinkGreaterThan(Integer value) {
            addCriterion("preLink >", value, "prelink");
            return (Criteria) this;
        }

        public Criteria andPrelinkGreaterThanOrEqualTo(Integer value) {
            addCriterion("preLink >=", value, "prelink");
            return (Criteria) this;
        }

        public Criteria andPrelinkLessThan(Integer value) {
            addCriterion("preLink <", value, "prelink");
            return (Criteria) this;
        }

        public Criteria andPrelinkLessThanOrEqualTo(Integer value) {
            addCriterion("preLink <=", value, "prelink");
            return (Criteria) this;
        }

        public Criteria andPrelinkIn(List<Integer> values) {
            addCriterion("preLink in", values, "prelink");
            return (Criteria) this;
        }

        public Criteria andPrelinkNotIn(List<Integer> values) {
            addCriterion("preLink not in", values, "prelink");
            return (Criteria) this;
        }

        public Criteria andPrelinkBetween(Integer value1, Integer value2) {
            addCriterion("preLink between", value1, value2, "prelink");
            return (Criteria) this;
        }

        public Criteria andPrelinkNotBetween(Integer value1, Integer value2) {
            addCriterion("preLink not between", value1, value2, "prelink");
            return (Criteria) this;
        }

        public Criteria andNextlinkIsNull() {
            addCriterion("nextLink is null");
            return (Criteria) this;
        }

        public Criteria andNextlinkIsNotNull() {
            addCriterion("nextLink is not null");
            return (Criteria) this;
        }

        public Criteria andNextlinkEqualTo(Integer value) {
            addCriterion("nextLink =", value, "nextlink");
            return (Criteria) this;
        }

        public Criteria andNextlinkNotEqualTo(Integer value) {
            addCriterion("nextLink <>", value, "nextlink");
            return (Criteria) this;
        }

        public Criteria andNextlinkGreaterThan(Integer value) {
            addCriterion("nextLink >", value, "nextlink");
            return (Criteria) this;
        }

        public Criteria andNextlinkGreaterThanOrEqualTo(Integer value) {
            addCriterion("nextLink >=", value, "nextlink");
            return (Criteria) this;
        }

        public Criteria andNextlinkLessThan(Integer value) {
            addCriterion("nextLink <", value, "nextlink");
            return (Criteria) this;
        }

        public Criteria andNextlinkLessThanOrEqualTo(Integer value) {
            addCriterion("nextLink <=", value, "nextlink");
            return (Criteria) this;
        }

        public Criteria andNextlinkIn(List<Integer> values) {
            addCriterion("nextLink in", values, "nextlink");
            return (Criteria) this;
        }

        public Criteria andNextlinkNotIn(List<Integer> values) {
            addCriterion("nextLink not in", values, "nextlink");
            return (Criteria) this;
        }

        public Criteria andNextlinkBetween(Integer value1, Integer value2) {
            addCriterion("nextLink between", value1, value2, "nextlink");
            return (Criteria) this;
        }

        public Criteria andNextlinkNotBetween(Integer value1, Integer value2) {
            addCriterion("nextLink not between", value1, value2, "nextlink");
            return (Criteria) this;
        }

        public Criteria andDisplayxIsNull() {
            addCriterion("displayX is null");
            return (Criteria) this;
        }

        public Criteria andDisplayxIsNotNull() {
            addCriterion("displayX is not null");
            return (Criteria) this;
        }

        public Criteria andDisplayxEqualTo(Integer value) {
            addCriterion("displayX =", value, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayxNotEqualTo(Integer value) {
            addCriterion("displayX <>", value, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayxGreaterThan(Integer value) {
            addCriterion("displayX >", value, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayxGreaterThanOrEqualTo(Integer value) {
            addCriterion("displayX >=", value, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayxLessThan(Integer value) {
            addCriterion("displayX <", value, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayxLessThanOrEqualTo(Integer value) {
            addCriterion("displayX <=", value, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayxIn(List<Integer> values) {
            addCriterion("displayX in", values, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayxNotIn(List<Integer> values) {
            addCriterion("displayX not in", values, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayxBetween(Integer value1, Integer value2) {
            addCriterion("displayX between", value1, value2, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayxNotBetween(Integer value1, Integer value2) {
            addCriterion("displayX not between", value1, value2, "displayx");
            return (Criteria) this;
        }

        public Criteria andDisplayyIsNull() {
            addCriterion("displayY is null");
            return (Criteria) this;
        }

        public Criteria andDisplayyIsNotNull() {
            addCriterion("displayY is not null");
            return (Criteria) this;
        }

        public Criteria andDisplayyEqualTo(Integer value) {
            addCriterion("displayY =", value, "displayy");
            return (Criteria) this;
        }

        public Criteria andDisplayyNotEqualTo(Integer value) {
            addCriterion("displayY <>", value, "displayy");
            return (Criteria) this;
        }

        public Criteria andDisplayyGreaterThan(Integer value) {
            addCriterion("displayY >", value, "displayy");
            return (Criteria) this;
        }

        public Criteria andDisplayyGreaterThanOrEqualTo(Integer value) {
            addCriterion("displayY >=", value, "displayy");
            return (Criteria) this;
        }

        public Criteria andDisplayyLessThan(Integer value) {
            addCriterion("displayY <", value, "displayy");
            return (Criteria) this;
        }

        public Criteria andDisplayyLessThanOrEqualTo(Integer value) {
            addCriterion("displayY <=", value, "displayy");
            return (Criteria) this;
        }

        public Criteria andDisplayyIn(List<Integer> values) {
            addCriterion("displayY in", values, "displayy");
            return (Criteria) this;
        }

        public Criteria andDisplayyNotIn(List<Integer> values) {
            addCriterion("displayY not in", values, "displayy");
            return (Criteria) this;
        }

        public Criteria andDisplayyBetween(Integer value1, Integer value2) {
            addCriterion("displayY between", value1, value2, "displayy");
            return (Criteria) this;
        }

        public Criteria andDisplayyNotBetween(Integer value1, Integer value2) {
            addCriterion("displayY not between", value1, value2, "displayy");
            return (Criteria) this;
        }

        public Criteria andColorIsNull() {
            addCriterion("color is null");
            return (Criteria) this;
        }

        public Criteria andColorIsNotNull() {
            addCriterion("color is not null");
            return (Criteria) this;
        }

        public Criteria andColorEqualTo(Integer value) {
            addCriterion("color =", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotEqualTo(Integer value) {
            addCriterion("color <>", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorGreaterThan(Integer value) {
            addCriterion("color >", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorGreaterThanOrEqualTo(Integer value) {
            addCriterion("color >=", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorLessThan(Integer value) {
            addCriterion("color <", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorLessThanOrEqualTo(Integer value) {
            addCriterion("color <=", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorIn(List<Integer> values) {
            addCriterion("color in", values, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotIn(List<Integer> values) {
            addCriterion("color not in", values, "color");
            return (Criteria) this;
        }

        public Criteria andColorBetween(Integer value1, Integer value2) {
            addCriterion("color between", value1, value2, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotBetween(Integer value1, Integer value2) {
            addCriterion("color not between", value1, value2, "color");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNull() {
            addCriterion("sequence is null");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNotNull() {
            addCriterion("sequence is not null");
            return (Criteria) this;
        }

        public Criteria andSequenceEqualTo(Integer value) {
            addCriterion("sequence =", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotEqualTo(Integer value) {
            addCriterion("sequence <>", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThan(Integer value) {
            addCriterion("sequence >", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThanOrEqualTo(Integer value) {
            addCriterion("sequence >=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThan(Integer value) {
            addCriterion("sequence <", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThanOrEqualTo(Integer value) {
            addCriterion("sequence <=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceIn(List<Integer> values) {
            addCriterion("sequence in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotIn(List<Integer> values) {
            addCriterion("sequence not in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceBetween(Integer value1, Integer value2) {
            addCriterion("sequence between", value1, value2, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotBetween(Integer value1, Integer value2) {
            addCriterion("sequence not between", value1, value2, "sequence");
            return (Criteria) this;
        }

        public Criteria andReceiverIsNull() {
            addCriterion("receiver is null");
            return (Criteria) this;
        }

        public Criteria andReceiverIsNotNull() {
            addCriterion("receiver is not null");
            return (Criteria) this;
        }

        public Criteria andReceiverEqualTo(Integer value) {
            addCriterion("receiver =", value, "receiver");
            return (Criteria) this;
        }

        public Criteria andReceiverNotEqualTo(Integer value) {
            addCriterion("receiver <>", value, "receiver");
            return (Criteria) this;
        }

        public Criteria andReceiverGreaterThan(Integer value) {
            addCriterion("receiver >", value, "receiver");
            return (Criteria) this;
        }

        public Criteria andReceiverGreaterThanOrEqualTo(Integer value) {
            addCriterion("receiver >=", value, "receiver");
            return (Criteria) this;
        }

        public Criteria andReceiverLessThan(Integer value) {
            addCriterion("receiver <", value, "receiver");
            return (Criteria) this;
        }

        public Criteria andReceiverLessThanOrEqualTo(Integer value) {
            addCriterion("receiver <=", value, "receiver");
            return (Criteria) this;
        }

        public Criteria andReceiverIn(List<Integer> values) {
            addCriterion("receiver in", values, "receiver");
            return (Criteria) this;
        }

        public Criteria andReceiverNotIn(List<Integer> values) {
            addCriterion("receiver not in", values, "receiver");
            return (Criteria) this;
        }

        public Criteria andReceiverBetween(Integer value1, Integer value2) {
            addCriterion("receiver between", value1, value2, "receiver");
            return (Criteria) this;
        }

        public Criteria andReceiverNotBetween(Integer value1, Integer value2) {
            addCriterion("receiver not between", value1, value2, "receiver");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflowNode
     *
     * @mbggenerated do_not_delete_during_merge Sun Jul 03 12:21:14 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflowNode
     *
     * @mbggenerated Sun Jul 03 12:21:14 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}