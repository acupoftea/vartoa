package com.srsoft.model;

import java.util.ArrayList;
import java.util.List;

public class UserDefineFormDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public UserDefineFormDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUdfidIsNull() {
            addCriterion("udfId is null");
            return (Criteria) this;
        }

        public Criteria andUdfidIsNotNull() {
            addCriterion("udfId is not null");
            return (Criteria) this;
        }

        public Criteria andUdfidEqualTo(Integer value) {
            addCriterion("udfId =", value, "udfid");
            return (Criteria) this;
        }

        public Criteria andUdfidNotEqualTo(Integer value) {
            addCriterion("udfId <>", value, "udfid");
            return (Criteria) this;
        }

        public Criteria andUdfidGreaterThan(Integer value) {
            addCriterion("udfId >", value, "udfid");
            return (Criteria) this;
        }

        public Criteria andUdfidGreaterThanOrEqualTo(Integer value) {
            addCriterion("udfId >=", value, "udfid");
            return (Criteria) this;
        }

        public Criteria andUdfidLessThan(Integer value) {
            addCriterion("udfId <", value, "udfid");
            return (Criteria) this;
        }

        public Criteria andUdfidLessThanOrEqualTo(Integer value) {
            addCriterion("udfId <=", value, "udfid");
            return (Criteria) this;
        }

        public Criteria andUdfidIn(List<Integer> values) {
            addCriterion("udfId in", values, "udfid");
            return (Criteria) this;
        }

        public Criteria andUdfidNotIn(List<Integer> values) {
            addCriterion("udfId not in", values, "udfid");
            return (Criteria) this;
        }

        public Criteria andUdfidBetween(Integer value1, Integer value2) {
            addCriterion("udfId between", value1, value2, "udfid");
            return (Criteria) this;
        }

        public Criteria andUdfidNotBetween(Integer value1, Integer value2) {
            addCriterion("udfId not between", value1, value2, "udfid");
            return (Criteria) this;
        }

        public Criteria andLabelIsNull() {
            addCriterion("label is null");
            return (Criteria) this;
        }

        public Criteria andLabelIsNotNull() {
            addCriterion("label is not null");
            return (Criteria) this;
        }

        public Criteria andLabelEqualTo(String value) {
            addCriterion("label =", value, "label");
            return (Criteria) this;
        }

        public Criteria andLabelNotEqualTo(String value) {
            addCriterion("label <>", value, "label");
            return (Criteria) this;
        }

        public Criteria andLabelGreaterThan(String value) {
            addCriterion("label >", value, "label");
            return (Criteria) this;
        }

        public Criteria andLabelGreaterThanOrEqualTo(String value) {
            addCriterion("label >=", value, "label");
            return (Criteria) this;
        }

        public Criteria andLabelLessThan(String value) {
            addCriterion("label <", value, "label");
            return (Criteria) this;
        }

        public Criteria andLabelLessThanOrEqualTo(String value) {
            addCriterion("label <=", value, "label");
            return (Criteria) this;
        }

        public Criteria andLabelLike(String value) {
            addCriterion("label like", value, "label");
            return (Criteria) this;
        }

        public Criteria andLabelNotLike(String value) {
            addCriterion("label not like", value, "label");
            return (Criteria) this;
        }

        public Criteria andLabelIn(List<String> values) {
            addCriterion("label in", values, "label");
            return (Criteria) this;
        }

        public Criteria andLabelNotIn(List<String> values) {
            addCriterion("label not in", values, "label");
            return (Criteria) this;
        }

        public Criteria andLabelBetween(String value1, String value2) {
            addCriterion("label between", value1, value2, "label");
            return (Criteria) this;
        }

        public Criteria andLabelNotBetween(String value1, String value2) {
            addCriterion("label not between", value1, value2, "label");
            return (Criteria) this;
        }

        public Criteria andWidgettypeIsNull() {
            addCriterion("widgetType is null");
            return (Criteria) this;
        }

        public Criteria andWidgettypeIsNotNull() {
            addCriterion("widgetType is not null");
            return (Criteria) this;
        }

        public Criteria andWidgettypeEqualTo(Integer value) {
            addCriterion("widgetType =", value, "widgettype");
            return (Criteria) this;
        }

        public Criteria andWidgettypeNotEqualTo(Integer value) {
            addCriterion("widgetType <>", value, "widgettype");
            return (Criteria) this;
        }

        public Criteria andWidgettypeGreaterThan(Integer value) {
            addCriterion("widgetType >", value, "widgettype");
            return (Criteria) this;
        }

        public Criteria andWidgettypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("widgetType >=", value, "widgettype");
            return (Criteria) this;
        }

        public Criteria andWidgettypeLessThan(Integer value) {
            addCriterion("widgetType <", value, "widgettype");
            return (Criteria) this;
        }

        public Criteria andWidgettypeLessThanOrEqualTo(Integer value) {
            addCriterion("widgetType <=", value, "widgettype");
            return (Criteria) this;
        }

        public Criteria andWidgettypeIn(List<Integer> values) {
            addCriterion("widgetType in", values, "widgettype");
            return (Criteria) this;
        }

        public Criteria andWidgettypeNotIn(List<Integer> values) {
            addCriterion("widgetType not in", values, "widgettype");
            return (Criteria) this;
        }

        public Criteria andWidgettypeBetween(Integer value1, Integer value2) {
            addCriterion("widgetType between", value1, value2, "widgettype");
            return (Criteria) this;
        }

        public Criteria andWidgettypeNotBetween(Integer value1, Integer value2) {
            addCriterion("widgetType not between", value1, value2, "widgettype");
            return (Criteria) this;
        }

        public Criteria andRequirefieldIsNull() {
            addCriterion("requireField is null");
            return (Criteria) this;
        }

        public Criteria andRequirefieldIsNotNull() {
            addCriterion("requireField is not null");
            return (Criteria) this;
        }

        public Criteria andRequirefieldEqualTo(Integer value) {
            addCriterion("requireField =", value, "requirefield");
            return (Criteria) this;
        }

        public Criteria andRequirefieldNotEqualTo(Integer value) {
            addCriterion("requireField <>", value, "requirefield");
            return (Criteria) this;
        }

        public Criteria andRequirefieldGreaterThan(Integer value) {
            addCriterion("requireField >", value, "requirefield");
            return (Criteria) this;
        }

        public Criteria andRequirefieldGreaterThanOrEqualTo(Integer value) {
            addCriterion("requireField >=", value, "requirefield");
            return (Criteria) this;
        }

        public Criteria andRequirefieldLessThan(Integer value) {
            addCriterion("requireField <", value, "requirefield");
            return (Criteria) this;
        }

        public Criteria andRequirefieldLessThanOrEqualTo(Integer value) {
            addCriterion("requireField <=", value, "requirefield");
            return (Criteria) this;
        }

        public Criteria andRequirefieldIn(List<Integer> values) {
            addCriterion("requireField in", values, "requirefield");
            return (Criteria) this;
        }

        public Criteria andRequirefieldNotIn(List<Integer> values) {
            addCriterion("requireField not in", values, "requirefield");
            return (Criteria) this;
        }

        public Criteria andRequirefieldBetween(Integer value1, Integer value2) {
            addCriterion("requireField between", value1, value2, "requirefield");
            return (Criteria) this;
        }

        public Criteria andRequirefieldNotBetween(Integer value1, Integer value2) {
            addCriterion("requireField not between", value1, value2, "requirefield");
            return (Criteria) this;
        }

        public Criteria andControlvalueIsNull() {
            addCriterion("controlValue is null");
            return (Criteria) this;
        }

        public Criteria andControlvalueIsNotNull() {
            addCriterion("controlValue is not null");
            return (Criteria) this;
        }

        public Criteria andControlvalueEqualTo(String value) {
            addCriterion("controlValue =", value, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueNotEqualTo(String value) {
            addCriterion("controlValue <>", value, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueGreaterThan(String value) {
            addCriterion("controlValue >", value, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueGreaterThanOrEqualTo(String value) {
            addCriterion("controlValue >=", value, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueLessThan(String value) {
            addCriterion("controlValue <", value, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueLessThanOrEqualTo(String value) {
            addCriterion("controlValue <=", value, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueLike(String value) {
            addCriterion("controlValue like", value, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueNotLike(String value) {
            addCriterion("controlValue not like", value, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueIn(List<String> values) {
            addCriterion("controlValue in", values, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueNotIn(List<String> values) {
            addCriterion("controlValue not in", values, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueBetween(String value1, String value2) {
            addCriterion("controlValue between", value1, value2, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andControlvalueNotBetween(String value1, String value2) {
            addCriterion("controlValue not between", value1, value2, "controlvalue");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNull() {
            addCriterion("sequence is null");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNotNull() {
            addCriterion("sequence is not null");
            return (Criteria) this;
        }

        public Criteria andSequenceEqualTo(Integer value) {
            addCriterion("sequence =", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotEqualTo(Integer value) {
            addCriterion("sequence <>", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThan(Integer value) {
            addCriterion("sequence >", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThanOrEqualTo(Integer value) {
            addCriterion("sequence >=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThan(Integer value) {
            addCriterion("sequence <", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThanOrEqualTo(Integer value) {
            addCriterion("sequence <=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceIn(List<Integer> values) {
            addCriterion("sequence in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotIn(List<Integer> values) {
            addCriterion("sequence not in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceBetween(Integer value1, Integer value2) {
            addCriterion("sequence between", value1, value2, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotBetween(Integer value1, Integer value2) {
            addCriterion("sequence not between", value1, value2, "sequence");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated do_not_delete_during_merge Sat Aug 06 06:53:22 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userDefineFormDetail
     *
     * @mbggenerated Sat Aug 06 06:53:22 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}